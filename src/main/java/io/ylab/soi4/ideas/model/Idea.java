package io.ylab.soi4.ideas.model;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EnumType;
import jakarta.persistence.Enumerated;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import java.util.ArrayList;
import java.util.List;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

/**
 * Represents the "Idea" entity created by a user. "ideas" table in the database.
 */
@Data
@Entity
@Table(name = "ideas", schema = "ideas")
@Builder
@NoArgsConstructor
@AllArgsConstructor
public class Idea {

    /**
     * The unique identifier for the idea. Automatically generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "idea_id")
    private Long ideaId;

    /**
     * The title of the idea. Cannot be null.
     */
    @Column(name = "title", nullable = false)
    private String title;

    /**
     * The annotation of the idea.
     */
    @Column(name = "annotation")
    private String annotation;

    /**
     * The description of the idea.
     */
    @Column(name = "description")
    private String description;

    /**
     * The ID of the user who created the idea. Cannot be null.
     */
    @Column(name = "user_id", nullable = false)
    private Long userId;

    /**
     * The current status of the idea. Cannot be null.
     */
    @Enumerated(EnumType.STRING)
    @Column(name = "status", nullable = false)
    private IdeaStatus status;

    /**
     * The number of likes the idea has received. Cannot be null.
     */
    @Column(name = "likes", nullable = false, columnDefinition = "BIGINT DEFAULT 0")
    private Long likes;

    /**
     * The number of dislikes the idea has received. Cannot be null.
     */
    @Column(name = "dislikes", nullable = false, columnDefinition = "BIGINT DEFAULT 0")
    private Long dislikes;

    /**
     * Indicates whether the idea is active. Cannot be null.
     */
    @Column(name = "is_active", nullable = false, columnDefinition = "BOOLEAN DEFAULT TRUE")
    private Boolean isActive;

    /**
     * A list of files associated with the idea.
     * This defines a one-to-many relationship with the File entity.
     */
    @OneToMany(mappedBy = "idea", cascade = CascadeType.ALL, orphanRemoval = true)
    private List<File> files = new ArrayList<>();


}